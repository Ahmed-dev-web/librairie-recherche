package com.example.Utils;

import java.text.Normalizer;
import java.util.regex.Pattern;

/**
 * üî† Utilitaire pour la manipulation de cha√Ænes de caract√®res.
 * Fournit des m√©thodes pour normaliser, comparer et rechercher du texte sans tenir compte des accents ou de la casse.
 */
public class StringUtils {

    /**
     * üìå Supprime les accents et normalise le texte en minuscules.
     * @param texte Le texte √† normaliser.
     * @return Texte sans accents et en minuscules.
     */
    public static String normaliser(String texte) {
        if (texte == null) return "";
        String texteNormalise = Normalizer.normalize(texte, Normalizer.Form.NFD);
        return Pattern.compile("\\p{InCombiningDiacriticalMarks}+").matcher(texteNormalise).replaceAll("")
                .toLowerCase();
    }

    /**
     * üîç Compare deux cha√Ænes de caract√®res de mani√®re insensible aux accents et √† la casse.
     * @param str1 Premi√®re cha√Æne √† comparer.
     * @param str2 Deuxi√®me cha√Æne √† comparer.
     * @return `true` si les deux cha√Ænes sont √©quivalentes apr√®s normalisation, sinon `false`.
     */
    public static boolean equalsIgnoreAccents(String str1, String str2) {
        return normaliser(str1).equals(normaliser(str2));
    }

    /**
     * üîé V√©rifie si une cha√Æne contient une autre, en ignorant les accents et la casse.
     * @param source La cha√Æne source o√π chercher.
     * @param recherche La cha√Æne recherch√©e.
     * @return `true` si la source contient la recherche apr√®s normalisation, sinon `false`.
     */
    public static boolean containsIgnoreAccents(String source, String recherche) {
        return normaliser(source).contains(normaliser(recherche));
    }

    /**
     * üìñ V√©rifie si une cha√Æne commence par une autre, en ignorant les accents et la casse.
     * @param source La cha√Æne source.
     * @param prefix Le pr√©fixe recherch√©.
     * @return `true` si la source commence par le pr√©fixe apr√®s normalisation, sinon `false`.
     */
    public static boolean startsWithIgnoreAccents(String source, String prefix) {
        return normaliser(source).startsWith(normaliser(prefix));
    }
}
